CREATE SCHEMA "CATEGORIAS"
CREATE SCHEMA "FINANZAS"

CREATE TABLE "CATEGORIAS"."CATEGORIA_INGRESOS" (
	CATEGORIA	VARCHAR(9),
	CATEGORIA_NIVEL_UNO	VARCHAR(27),
	CATEGORIA_NIVEL_DOS VARCHAR(27),
	
	PRIMARY KEY (CATEGORIA_NIVEL_DOS)

);


CREATE TABLE "CATEGORIAS"."CATEGORIA_GASTOS" (
	CATEGORIA	VARCHAR(9),
	CATEGORIA_NIVEL_UNO	VARCHAR(27),
	CATEGORIA_NIVEL_DOS VARCHAR(27) NOT NULL,
	
	PRIMARY KEY (CATEGORIA_NIVEL_DOS)

);

	
--FINANZAS CREATE:

CREATE TABLE "FINANZAS"."FINANZAS_GASTOS" (
	CATEGORIA_NIVEL_DOS VARCHAR(27),
	FECHA TIMESTAMP,
	CANTIDAD DOUBLE PRECISION,
	DIVISA CHARACTER VARYING,
	
	PRIMARY KEY (CATEGORIA_NIVEL_DOS, FECHA),
	FOREIGN KEY (CATEGORIA_NIVEL_DOS) REFERENCES "CATEGORIAS"."CATEGORIA_GASTOS"(CATEGORIA_NIVEL_DOS)

);

		
CREATE TABLE "FINANZAS"."FINANZAS_INGRESOS" (
	CATEGORIA_NIVEL_DOS VARCHAR(27),
	FECHA TIMESTAMP,
	CANTIDAD DOUBLE PRECISION,
	DIVISA CHARACTER VARYING,
	
	PRIMARY KEY (CATEGORIA_NIVEL_DOS, FECHA),
	FOREIGN KEY (CATEGORIA_NIVEL_DOS) REFERENCES "CATEGORIAS"."CATEGORIA_INGRESOS"(CATEGORIA_NIVEL_DOS)

);

CREATE TABLE "FINANZAS"."META_INGRESOS" (
	CATEGORIA VARCHAR(9),
	FECHA TIMESTAMP,
	CATEGORIA_NIVEL_DOS VARCHAR(27), 
	CANTIDAD DOUBLE PRECISION,
	
	PRIMARY KEY (CATEGORIA_NIVEL_DOS, FECHA),
	FOREIGN KEY (CATEGORIA_NIVEL_DOS) REFERENCES "CATEGORIAS"."CATEGORIA_INGRESOS"(CATEGORIA_NIVEL_DOS)
	
);


CREATE TABLE "FINANZAS"."PRESUPUESTO_GASTOS" (
	CATEGORIA VARCHAR(9),
	FECHA TIMESTAMP,
	CATEGORIA_NIVEL_DOS VARCHAR(27), 
	CANTIDAD DOUBLE PRECISION,
	
	PRIMARY KEY (CATEGORIA_NIVEL_DOS, FECHA),
	FOREIGN KEY (CATEGORIA_NIVEL_DOS) REFERENCES "CATEGORIAS"."CATEGORIA_GASTOS"(CATEGORIA_NIVEL_DOS)

);


--TRUNCATE FINANZAS:

TRUNCATE TABLE "FINANZAS"."FINANZAS_INGRESOS";
TRUNCATE TABLE "FINANZAS"."FINANZAS_GASTOS";
TRUNCATE TABLE "FINANZAS"."META_INGRESOS";
TRUNCATE TABLE "FINANZAS"."PRESUPUESTO_GASTOS";




--INVERSIONES CREATE:

CREATE TABLE "FINANZAS"."CARTERA" (
	ISIN VARCHAR(60),
	FECHA_OPERACION TIMESTAMP,
	DATE_REFERENCE TIMESTAMP DEFAULT '01-01-9999 00:00:00', -- MEJORA: El accionista puede vender cualquier lote de acciones, NO tiene por qué ser FIFO...
	ACTIVO VARCHAR(10),
	TIPO_DE_ACTIVO VARCHAR(30),
	TIPO_DE_OPERACION VARCHAR(30),
	CANTIDAD INTEGER,
	PRECIO DOUBLE PRECISION,
	DIVISA VARCHAR(10),
	TIPO_DE_CAMBIO DOUBLE PRECISION,
	PRECIO_EUR DOUBLE PRECISION,
	
	PRIMARY KEY (ISIN, FECHA_OPERACION)
);

CREATE TABLE "FINANZAS"."RENDIMIENTOS" ( --El objetivo de esta tabla es recoger información cada x horas de la cotización de cada activo (ISIN)
	ISIN VARCHAR(60),
	FECHA TIMESTAMP,
	ACTIVO VARCHAR(10),
	TIPO_DE_ACTIVO VARCHAR(30),
	PRECIO DOUBLE PRECISION,
	CIERRE DOUBLE PRECISION,
	DIVISA VARCHAR(10),
	PORCENTAJE_PLUSVALIA DOUBLE PRECISION,
	
	PRIMARY KEY (ISIN, FECHA)

);

CREATE TABLE "FINANZAS"."DIVIDENDOS" (
	CATEGORIA_NIVEL_DOS VARCHAR(27),
	ISIN VARCHAR(60),
	FECHA_EX_DIV DATE,
	FECHA_COBRO DATE,
	CANTIDAD INTEGER,
	ACTIVO VARCHAR(10),
	TIPO_DE_ACTIVO VARCHAR(30),
	DIVISA VARCHAR(10),
	TIPO_DE_CAMBIO DOUBLE PRECISION,
	DIVIDENDO_EUR DOUBLE PRECISION,
	
	PRIMARY KEY (ISIN, FECHA_EX_DIV),
	FOREIGN KEY (CATEGORIA_NIVEL_DOS) REFERENCES "CATEGORIAS"."CATEGORIA_INGRESOS"(CATEGORIA_NIVEL_DOS)

);


CREATE MATERIALIZED VIEW "FINANZAS"."RENDIMIENTOS_CURRENT_DATE" AS

	WITH CTE_SUMA_CANTIDAD_PRECIO_EUR AS (

		SELECT ISIN, TIPO_DE_OPERACION, CANTIDAD, PRECIO_EUR
	FROM 
		(SELECT ISIN, TIPO_DE_OPERACION, SUM(CANTIDAD) AS CANTIDAD,
		SUM(PRECIO_EUR) AS PRECIO_EUR
		FROM "FINANZAS"."CARTERA" AS TABLA_CARTERA
		WHERE TIPO_DE_OPERACION = 'COMPRA'
		GROUP BY ISIN, TIPO_DE_OPERACION)

	),

	CTE_TABLA_PRECIOS_MEDIOS AS (
			SELECT CTE_SUMA_CANTIDAD_PRECIO_EUR.ISIN, CTE_SUMA_CANTIDAD_PRECIO_EUR.TIPO_DE_OPERACION, CTE_SUMA_CANTIDAD_PRECIO_EUR.CANTIDAD AS CANTIDAD, 
			CTE_SUMA_CANTIDAD_PRECIO_EUR.PRECIO_EUR/CANTIDAD AS PRECIO_MEDIO_EUR
			FROM CTE_SUMA_CANTIDAD_PRECIO_EUR
	)

	--SELECT * FROM CTE_TABLA_PRECIOS_MEDIOS

	SELECT CTE_TABLA_PRECIOS_MEDIOS.ISIN, TIPO_DE_OPERACION, 
		CANTIDAD,
		CIERRE, 
		TABLA_FECHA.FECHA_ACTUAL,
		--FECHA, --Para ver las fechas diarias
		PRECIO_MEDIO_EUR,
		CIERRE-PRECIO_MEDIO_EUR AS PLUSVALIA_MINUSVALIA
	FROM 
		CTE_TABLA_PRECIOS_MEDIOS 
		INNER JOIN 
		(SELECT ISIN, FECHA, CIERRE FROM "FINANZAS"."RENDIMIENTOS") AS TABLA_RENDIMIENTOS

		ON TABLA_RENDIMIENTOS.ISIN = CTE_TABLA_PRECIOS_MEDIOS.ISIN

		--Hacemos cruce con este JOIN para que tome la ÚLTIMA FECHA para cada ISIN:
		INNER JOIN
			(SELECT ISIN, MAX(FECHA) AS FECHA_ACTUAL
				FROM "FINANZAS"."RENDIMIENTOS"
				GROUP BY ISIN) AS TABLA_FECHA
		ON TABLA_RENDIMIENTOS.ISIN = TABLA_FECHA.ISIN
		AND TABLA_RENDIMIENTOS.FECHA = TABLA_FECHA.FECHA_ACTUAL
;








